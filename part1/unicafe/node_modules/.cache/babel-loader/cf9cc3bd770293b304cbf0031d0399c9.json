{"ast":null,"code":"var _jsxFileName = \"/home/zavier/projects/webdev/react/fullstackopen/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst Statistic = ({\n  text,\n  value\n}) => {\n  if (text === 'positive ') {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [value, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistic;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  votes,\n  average\n}) => {\n  if (votes === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"good \",\n        value: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"neutral \",\n        value: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"bad \",\n        value: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"votes \",\n        value: votes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"average \",\n        value: average / votes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"positive \",\n        value: good / votes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [votes, setVotes] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n    setVotes(votes + 1);\n    setAverage(average + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n    setVotes(votes + 1);\n    setAverage(average - 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setVotes(votes + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      votes: votes,\n      average: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"XY5EOcWU20W31jCvgwvR93S0UTU=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistic\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/zavier/projects/webdev/react/fullstackopen/part1/unicafe/src/App.js"],"names":["React","useState","Button","handleClick","text","Statistic","value","Statistics","good","neutral","bad","votes","average","App","setGood","setNeutral","setBad","setVotes","setAverage","handleGood","handleBad","handleNeutral"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>{text}</button>\n);\n\nconst Statistic = ({ text, value }) => {\n  if (text === 'positive ') {\n    return (\n      <tr>\n        <td>{text}</td>\n        <td>{value} %</td>\n      </tr>\n    );\n  }\n  return (\n    <tr>\n      <td>{text}</td>\n      <td>{value}</td>\n    </tr>\n  );\n};\n\nconst Statistics = ({ good, neutral, bad, votes, average }) => {\n  if (votes === 0) {\n    return <p>no feedback given</p>;\n  }\n\n  return (\n    <table>\n      <tbody>\n        <Statistic text='good ' value={good} />\n        <Statistic text='neutral ' value={neutral} />\n        <Statistic text='bad ' value={bad} />\n        <Statistic text='votes ' value={votes} />\n        <Statistic text='average ' value={average / votes} />\n        <Statistic text='positive ' value={good / votes} />\n      </tbody>\n    </table>\n  );\n};\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [votes, setVotes] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n    setVotes(votes + 1);\n    setAverage(average + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n    setVotes(votes + 1);\n    setAverage(average - 1);\n  };\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setVotes(votes + 1);\n  };\n\n  return (\n    <>\n      <h2>give feedback</h2>\n      <Button handleClick={handleGood} text='good' />\n      <Button handleClick={handleNeutral} text='neutral' />\n      <Button handleClick={handleBad} text='bad' />\n      <h2>statistics</h2>\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        votes={votes}\n        average={average}\n      />\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}