{"ast":null,"code":"var _jsxFileName = \"/home/zavier/projects/webdev/react/fullstackopen/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [votes, setVotes] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n    setVotes(votes + 1);\n    setAverage(average + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n    setVotes(votes + 1);\n    setAverage(average - 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setVotes(votes + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", votes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", average / votes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", good / votes, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"XY5EOcWU20W31jCvgwvR93S0UTU=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/zavier/projects/webdev/react/fullstackopen/part1/unicafe/src/App.js"],"names":["React","useState","Button","handleClick","text","App","good","setGood","neutral","setNeutral","bad","setBad","votes","setVotes","average","setAverage","handleGood","handleBad","handleNeutral"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,kBACb;AAAQ,EAAA,OAAO,EAAED,WAAjB;AAAA,YAA+BC;AAA/B;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMF,M;;AAIN,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;;AAEA,QAAMe,UAAU,GAAG,MAAM;AACvBT,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACAO,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAG,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,GAJD;;AAMA,QAAMG,SAAS,GAAG,MAAM;AACtBN,IAAAA,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;AACAG,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAG,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,GAJD;;AAKA,QAAMI,aAAa,GAAG,MAAM;AAC1BT,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAK,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEI,UAArB;AAAiC,MAAA,IAAI,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEE,aAArB;AAAoC,MAAA,IAAI,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAED,SAArB;AAAgC,MAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,0BAASX,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,6BAAYE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,yBAAQE,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,yBAAQE,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,6BAAYE,OAAO,GAAGF,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,8BAAaN,IAAI,GAAGM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAeD,CAvCD;;GAAMP,G;;MAAAA,G;AAyCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>{text}</button>\n);\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [votes, setVotes] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n    setVotes(votes + 1);\n    setAverage(average + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n    setVotes(votes + 1);\n    setAverage(average - 1);\n  };\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setVotes(votes + 1);\n  };\n\n  return (\n    <>\n      <h1>give feedback</h1>\n      <Button handleClick={handleGood} text='good' />\n      <Button handleClick={handleNeutral} text='neutral' />\n      <Button handleClick={handleBad} text='bad' />\n      <h1>statistics</h1>\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {votes}</p>\n      <p>average {average / votes}</p>\n      <p>positive {good / votes} %</p>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}